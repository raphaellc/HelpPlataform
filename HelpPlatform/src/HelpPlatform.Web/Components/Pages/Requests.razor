@page "/requests"
@rendermode InteractiveServer

<PageTitle>Help Requests</PageTitle>

<h1>Help Requests</h1>

<Accordion>
@foreach (var request in requests)
{
	<AccordionItem Title=request.title>
	<Content>
		<tr>
			<td>@request.Resource</td>
			<td>@request.Description</td>
			<td>@request.Status</td>
				<td><Button Color="ButtonColor.Primary" @onclick="OnClick"> Atender </Button></td>
		</tr>
	</Content>
	</AccordionItem>
}
</Accordion>

<Pagination ActivePageNumber="@currentPageNumber"
			TotalPages="10"
			PageChanged="OnPageChangedAsync" />

<text>Current Page Number: @currentPageNumber</text>


@code {
	int currentPageNumber = 2;
	private List<DonationRequest> requests = new();

	protected override async Task OnInitializedAsync()
	{
		//requests = await DbContext.DonationRequests.ToListAsync();
		List<DonationRequest> donationRequests = await HttpClient.GetFromJsonAsync<List<DonationRequest>>(NavigationManager.BaseUri + "donationrequests");
		requests = donationRequests;
	}

	protected void OnClick(EventArgs args)
	{
		Console.WriteLine("click event");
	}

	private async Task OnPageChangedAsync(int newPageNumber)
	{
		await Task.Run(() => { currentPageNumber = newPageNumber; });
	}
}