@using HelpPlatform.Web.DonationRequests.Claims
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<link href="css/StyleSheet.css" rel="stylesheet" />

<div class="row">
	<EditForm Model="@claim" OnSubmit="ValidateData" FormName="ClaimRequest">
		<div class="mb-3">
			<label for="description" class="form-label">Message</label>
			<InputText id="description" class="form-control" @bind-Value="claim.Message" />
		</div>

		<div class="mb-3">
			<label for="deadline" class="form-label">Deadline</label>
			<DateInput id="deadline" class="form-control" TValue="DateTime?" @bind-Value="claim.Deadline" EnableMinMax="true" Placeholder="Enter Date" />
		</div>

		<div class="mb-3">
			<label for="quantity" class="form-label">Quantity</label>
			<NumberInput id="quantity" class="form-control" TValue="int" @bind-Value="claim.Quantity" Placeholder="Enter amount" />
		</div>

		<button type="submit" class="btn btn-primary">Save</button>

		<div class="spinner-container">
			<Spinner Color="SpinnerColor.Primary" Visible="@saving" />
		</div>
		
		<div class="mt-3">@Message</div>
	</EditForm>
	
</div>

@code {
	[Parameter] public EventCallback OnClaimCreated { get; set; }

	[Parameter] public int RequestId { get; set; }

	private bool saving = false;

	private string Message = String.Empty;

	[SupplyParameterFromForm]
	private CreateDonationRequestClaimRequest claim { get; set; } = new();

	protected override void OnInitialized()
	{
		base.OnInitialized();
	}

	private async Task ValidateData(EditContext editContext)
	{
		try
		{
			saving = true;
			claim.UserId = 1;
			claim.RequestId = RequestId;

			HttpResponseMessage response = await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri + "DonationRequests/" + RequestId + "/claims", claim);

			saving = false;

			if (response.IsSuccessStatusCode)
			{
				Message = "Salvo!";
				if (OnClaimCreated.HasDelegate)
				{
					await OnClaimCreated.InvokeAsync(null);
				}
			}
			else
			{
				Message = $"Erro: {response.Content}";
			}
		}
		catch (Exception ex)
		{
			Message = $"Error: {ex.Message}";
		}
	}
}
