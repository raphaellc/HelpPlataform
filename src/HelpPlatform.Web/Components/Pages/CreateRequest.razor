@using HelpPlatform.Web.DonationRequests
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<link href="css/StyleSheet.css" rel="stylesheet" />

<EditForm Model="@request" OnSubmit="ValidateData" FormName="CreateRequest">
	<div class="mb-3">
		<label for="description" class="form-label">Description</label>
		<InputText id="description" class="form-control" @bind-Value="request.Description" />
	</div>

	<div class="mb-3">
		<label for="deadline" class="form-label">Deadline</label>
		<DateInput id="deadline" class="form-control" TValue="DateTime?" @bind-Value="request.Deadline" EnableMinMax="true" Placeholder="Enter Date" />
	</div>

	<div class="mb-3">
		<label for="location" class="form-label">Location</label>
		<InputText id="location" class="form-control" @bind-Value="request.Location" />
	</div>

	<div class="mb-3">
		<label for="ResourceTypeId" class="form-label">ResourceTypeId</label>
		<NumberInput id="ResourceTypeId" class="form-control" TValue="int?" @bind-Value="request.ResourceTypeId" />
	</div>

	<div class="mb-3">
		<label for="requestedQuantity" class="form-label">Requested Quantity</label>
		<NumberInput id="requestedQuantity" class="form-control" TValue="int?" @bind-Value="request.RequestedQuantity" Placeholder="Enter amount" />
	</div>

	<button type="submit" class="btn btn-primary">Save</button>

	<div class="mt-3">@Message</div>

	<div class="spinner-container">
		<Spinner Color="SpinnerColor.Primary" Visible="@saving" />
	</div>
	
</EditForm>

@code {
	[Parameter] public EventCallback OnRequestCreated { get; set; }

	private string Message = String.Empty;

	private bool saving = false;

	[SupplyParameterFromForm]
	private CreateDonationRequestRequest request { get; set; } = new();

	private async Task ValidateData(EditContext editContext)
	{

		saving = true; 
		request.UserId = 1;

		HttpResponseMessage response = await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri + "DonationRequests", request);

		saving = false;

		if (response.IsSuccessStatusCode)
		{
			Message = "Salvo!";
			if (OnRequestCreated.HasDelegate)
			{
				await OnRequestCreated.InvokeAsync(null);
			}
		}
		else
		{
			Message = $"Erro: {response.Content}";
		}
	}
}