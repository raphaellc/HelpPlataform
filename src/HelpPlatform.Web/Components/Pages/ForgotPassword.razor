@page "/forgot-password"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Esqueceu sua senha?</h3>

<div class="forgot-password-container">
    <p>Insira o e-mail associado à sua conta. Enviaremos um link para redefinir sua senha.</p>

    <EditForm Model="ForgotPasswordRequest" OnValidSubmit="HandleForgotPassword">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email">E-mail:</label>
            <InputText id="email" @bind-Value="ForgotPasswordRequest.Email" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary" disabled="@IsLoading">
            @if (IsLoading)
            {
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                Enviando...
            }
            else
            {
                <span>Enviar</span>
            }
        </button>
    </EditForm>

    @if (!string.IsNullOrEmpty(ResponseMessage))
    {
        <div class="alert alert-info mt-3">@ResponseMessage</div>
    }
</div>

@code {
    private ForgotPasswordRequest ForgotPasswordRequest = new ForgotPasswordRequest();
    private string? ResponseMessage;
    private bool IsLoading;

    private async Task HandleForgotPassword()
    {
        IsLoading = true;
        ResponseMessage = null;

        try
        {
            var response = await Http.PostAsJsonAsync("/forgot-password", ForgotPasswordRequest);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<ForgotPasswordResponse>();
                ResponseMessage = result?.Message ?? "Verifique seu e-mail para mais instruções.";
            }
            else
            {
                var errorResponse = await response.Content.ReadAsStringAsync();
                ResponseMessage = $"Erro: {errorResponse}";
            }
        }
        catch (Exception ex)
        {
            ResponseMessage = $"Ocorreu um erro: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }
}
